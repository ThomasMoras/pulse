name: Deploy to Vercel and Base Sepolia

on:
  push:
    branches:
      - main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID  }}
  PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
  PINATA_SECRET_KEY: ${{ secrets.PINATA_SECRET_KEY }}

jobs:
  Deploy-Frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front-end
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  Deploy-Contracts:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./back-end
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm install

      - name: Compile Contracts
        run: pnpm hardhat compile

      - name: Deploy to Base Sepolia
        run: pnpm hardhat run scripts/deploy.ts --network base-sepolia
        env:
          PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
          BASE_SEPOLIA_RPC: ${{ secrets.BASE_SEPOLIA_RPC }}
          BASESCAN_API_KEY: ${{ secrets.BASESCAN_API_KEY }}

      - name: Save Contract Addresses
        uses: actions/upload-artifact@v3
        with:
          name: contract-addresses
          path: deployed-addresses.json
